buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
    }
}

version projectVersion
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    profile "org.grails.profiles:web-plugin"

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"

    def excludes = {
        exclude module: 'junit'
        exclude module: 'spring-aop'
        exclude module: 'spring-core'
        exclude module: 'spring-oxm'
        exclude module: 'spring-test'
        exclude module: 'spring-beans'
        exclude module: 'spring-context'
        exclude module: 'spring-messaging'
        exclude module: 'spring-tx'
        exclude module: 'slf4j-log4j12'
        exclude module: 'log4j'
    }

    compile "org.springframework.batch:spring-batch-core:${springBatchVersion}", excludes
    compile "org.springframework.batch:spring-batch-infrastructure:${springBatchVersion}", excludes
    compile "org.springframework.batch:spring-batch-admin-resources:${springBatchAdminVersion}", excludes
    compile "org.springframework.batch:spring-batch-admin-manager:${springBatchAdminVersion}", excludes

    testRuntime "org.springframework.batch:spring-batch-test:${springBatchVersion}", excludes

    console "org.grails:grails-console"

    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"

    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"

    testCompile "cglib:cglib:3.2.5"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails:grails-plugin-testing"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

grailsPublish {
    githubSlug = 'longwa/grails-spring-batch'
    license {
        name = 'Apache-2.0'
    }

    desc = "Adds Spring Batch support including job configuration using Spring Bean DSL and configuration reloading"
    developers = [longwa: "Aaron Long", jengelman: "John Engelman", dbower: "Daniel Bower"]

    issueTrackerUrl = "https://github.com/longwa/grails-spring-batch/issues"
    vcsUrl = "https://github.com/longwa/grails-spring-batch"
}

allprojects {
    tasks.withType(Test) {
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }
    }
}

assets {
    packagePlugin = true
}
